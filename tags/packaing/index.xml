<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>packaing on Life with Linux</title>
    <link>http://blog.foobargem.com/tags/packaing/</link>
    <description>Recent content in packaing on Life with Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 May 2020 17:07:28 +0900</lastBuildDate>
    
	<atom:link href="http://blog.foobargem.com/tags/packaing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rabbitmq_exporter rpm packaing</title>
      <link>http://blog.foobargem.com/posts/rabbitmq_exporter-rpm-packaing-with-docker/</link>
      <pubDate>Sun, 03 May 2020 17:07:28 +0900</pubDate>
      
      <guid>http://blog.foobargem.com/posts/rabbitmq_exporter-rpm-packaing-with-docker/</guid>
      <description>OpenStack 을 지탱하는 Message queue 인 RabbitMQ 를 모니터링 하기 위해서 방안을 찾던중, 이미 퇴사한 친구가 구성해둔 Prometheus 가 있어서 활용하기 위해 rabbitmq_exporter 를 찾아 보았다.
PoC 를 위해서 https://github.com/kbudde/rabbitmq_exporter 를 사용하여 구성을 하기로 했는데, 당장 production 환경을 Docker 같은 container 환경으로 구성할수 없어서 rpm build 를 해야 했다.
이번에는 누구나 언제든 rpmbuild 를 할수 있도록 Docker 기반으로 스크립트를 만들었다.
rpm packaing $ git clone https://github.com/foobargem/packaging-rabbitmq_exporter.git $ cd packaging-rabbitmq_exporter $ make rpm  특별한 오류가 없다면 output 디렉토리에 rabbitmq_exporter-2020.</description>
    </item>
    
  </channel>
</rss>